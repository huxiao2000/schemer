#lang racket
(require graphics)
(open-graphics)
(struct frame (o x y))
(define (add p1 p2)
  (make-posn (+ (posn-x p1) (posn-x p2))
             (+ (posn-y p1) (posn-y p2))))
(define (scale s p)
  (make-posn (* s (posn-x p)) (* s (posn-y p))))
(define ((cmap f) p)
  (add (frame-o f)
       (add (scale (posn-x p) (frame-x f))
            (scale (posn-y p) (frame-y f)))))
(define (((transform ox oy xx xy yx yy) painter) f)
  (let ((o (frame-o f))
        (x (frame-x f))
        (y (frame-y f)))
    (let ((lc (lambda (a b)
                (add (scale a x) (scale b y)))))
      (painter (frame (add o (lc ox oy))
                      (lc xx xy)
                      (lc yx yy))))))
